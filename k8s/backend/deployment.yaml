apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend-deployment
  namespace: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-for-keyvault-secrets
          image: mcr.microsoft.com/oss/busybox/busybox:1.36.1
          command:
            - sh
            - -c
            - |
              until [ -s /mnt/secrets-store/sql-admin-username ] && [ -s /mnt/secrets-store/sql-admin-password ]; do
                echo "Waiting for Key Vault secrets to be available..."
                sleep 5
              done
          volumeMounts:
            - name: backend-secrets
              mountPath: /mnt/secrets-store
              readOnly: true
      containers:
        - name: backend
          image: docker.io/aalhatlan/backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-backend-config
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-backend-secret
                  key: DB_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-backend-secret
                  key: DB_PASSWORD
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: app-backend-config
                  key: SPRING_PROFILES_ACTIVE
            - name: SPRING_WEB_CORS_ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: app-backend-config
                  key: SPRING_WEB_CORS_ALLOWED_ORIGINS
          
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
          
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
          
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "2000m"
              memory: "1Gi"
          volumeMounts:
            - name: backend-secrets
              mountPath: /mnt/secrets-store
              readOnly: true

      volumes:
        - name: backend-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: backend-sql-secrets
